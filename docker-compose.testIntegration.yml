services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15
    container_name: postgres_iot
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: db_iot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - iot-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: unless-stopped
    ports:
      - "8085:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-external
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 186.64.120.248:9092
    networks:
      - iot-net

  # API Spring Boot
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api-iot
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: integration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/db_iot
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_KAFKA_BOOTSTRAP_SERVERS: 186.64.120.248:9092
    networks:
      - iot-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Simulador TCP/IP (ESP32)
  tcp-simulator:
    build:
      context: ./simulators/tcp-simulator
      dockerfile: Dockerfile
    container_name: tcp-simulator
    restart: unless-stopped
    # Descomenta si necesitas exponer endpoints externos desde el simulador
    ports:
      - "8082:8082"
    depends_on:
      - api
    environment:
      SPRING_PROFILES_ACTIVE: integration
      ESP32_SIMULATOR_API_KEY: sensor-esp32-tcp-key-519494H1494948T
      ESP32_SIMULATOR_PORT: 6000
      ESP32_SIMULATOR_HOST: api
      ESP32_SIMULATOR_INTERVAL_MILLIS: 2500
      #ESP32_SIMULATOR_TCP_ENABLE: true
    networks:
      - iot-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/status"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Simulador Kafka (Zigbee)
  kafka-simulator:
    build:
      context: ./simulators/kafka-simulator
      dockerfile: Dockerfile
    container_name: kafka-simulator
    restart: unless-stopped
    # Descomenta si necesitas exponer endpoints externos desde el simulador
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: integration
      SPRING_KAFKA_BOOTSTRAP_SERVERS: 186.64.120.248:9092
      KAFKA_SIMULATOR_API_KEY: sensor-zigbee-mqtt-key-15464813J57L
      KAFKA_SIMULATOR_DELAY_MS: 1000
      KAFKA_TOPIC: test-topic
    networks:
      - iot-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/status"]
      interval: 10s
      timeout: 5s
      retries: 3

# Volumen persistente para PostgreSQL
volumes:
  pgdata:

# Red compartida entre todos los servicios
networks:
  iot-net:
    driver: bridge
